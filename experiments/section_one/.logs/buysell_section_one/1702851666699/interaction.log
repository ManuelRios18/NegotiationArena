Game Settings

Player 1 Settings:
	player_goals: Sell resources for <ZUP>. It costed X: 40 ZUP to produce the resources
	player_initial_resources: X: 1
	player_social_behaviour: 
	player_roles: You are Player RED.
	player_valuation: X: 40 ZUP

Player 2 Settings:
	player_goals: Buy resources with <ZUP>. You are willing to pay at most X: 60 ZUP for the resources.
	player_initial_resources: ZUP: 100
	player_social_behaviour: 
	player_roles: You are Player BLUE.
	player_valuation: X: 60 ZUP

------------------ 
Current Iteration: 1
Turn: 0
message: Hello Player BLUE, I have an object that cost me 40 ZUP to produce. I'd like to offer it to you for 50 ZUP, allowing me to recuperate my production costs and make a reasonable profit. Are you interested in this trade?
player answer: PROPOSAL
newly proposed trade: Player RED Gives X: 1 | Player BLUE Gives ZUP: 50
my resources: X: 1
my goals: Sell resources for ZUP. It costed X: 40 ZUP to produce the resources
reason: Starting with a proposal that aims to cover production costs and gain some profit. The initial offer is set slightly higher to leave room for negotiation.
proposal count: 1

Current Iteration: 2
Turn: 1
message: Thank you for the offer, but I cannot accept it as it exceeds my budget.
player answer: REJECT
newly proposed trade: NONE
my resources: ZUP: 100
my goals: Buy resources with <ZUP>. You are willing to pay at most X: 60 ZUP for the resources.
reason: The proposed trade is not in line with your goal of paying at most 60 ZUP for the resources. It's over your budget.
proposal count: 1

------------------ 
Current Iteration: END
Turn: None
player_goals: [Sell resources for <ZUP>. It costed X: 40 ZUP to produce the resources, Buy resources with <ZUP>. You are willing to pay at most X: 60 ZUP for the resources.]
initial_resources: [Resources(resource_dict={'X': 1}), Resources(resource_dict={'ZUP': 100})]
proposed_trade: Player RED Gives X: 1 | Player BLUE Gives ZUP: 50
player_valuation: [{'X': 40}, {'X': 60}]
final_response: REJECT
final_resources: [Resources(resource_dict={'X': 1}), Resources(resource_dict={'ZUP': 100})]
player_outcome: [0, 0]