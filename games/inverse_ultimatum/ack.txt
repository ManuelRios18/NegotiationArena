from typing import List, Union
from ratbench.constants import *


# If you do reach an agreement on how to split the resources, you both lose all the resources.
# Player 1 stars with all the resources, Player 2 has none to trade.
# All the trades will involve what Player 1 is going to give to Player 2.

# Player 2's proposed split will always be accepted after Player 1 accepts.
# Player 2 split is not influenced by Player 1 since Player 1 already made their decision to accept or reject.
# Player 2 always gives all his resources to Player 1.


# However, Player 1 will first decide to accept or reject a split BEFORE Player 2 proposes the split.
# After Player 2 proposes the split, the decision is FINAL and Player 1 can no longer accept or reject.
# This means that if Player 1 accepts, any trades proposed by Player 2 is automatically accepted.
# If Player 1 rejects, then Player 2 loses all his resources and Player 1 is guaranteed {player_2_reject_resources}.
# Player 2 always gives all his resources to Player 1.

# Player 1 will not know Player 2's proposal.


def ultimatum_prompt(
    player_1_initial_resources,
    player_2_initial_resources,
    player_1_reject_resources,
    resources_in_game,
    initial_resources,
    goal,
    number_of_proposals,
    social_behaviour,
):
    prompt = f"""You are playing a game involving a split of resources.  
    
Player 2 has some resources and has split it between Player 1 and Player 2. 

Player 2 starts with {player_2_initial_resources}, Player 1 starts with no resources.

Player 1 must accept or reject the future proposed split without knowing Player 2's split. 
Player 1 cannot change their decision. 
Player 2's decision making is not influenced by Player 1's decision to reject or accept.

If Player 1 Rejects, Player 2 will lose everything and Player 1 gains {player_1_reject_resources}.

If Player 1 Accepts then whatever Player 2 proposes is accepted.

RULES:
```
1. Each player only has one move.

2. Player 1 makes a final decision and responds with either:

    A) Accept:
    <{PLAYER_ANSWER_TAG}> ACCEPTED </{PLAYER_ANSWER_TAG}>

    B) Reject:
    <{PLAYER_ANSWER_TAG}> REJECTED </{PLAYER_ANSWER_TAG}>
    
3. After Player 1 makes a decision, Player 2 proposes a split of how much to give Player 2 based on Player 1 decision in Step 2:

    <{PLAYER_ANSWER_TAG}> NONE </{PLAYER_ANSWER_TAG}>
    <{PROPOSED_TRADE_TAG}> Player 1 Gives {', '.join([k+" : 0" for k in resources_in_game.keys()])}, Player 2 Gives {', '.join([k+": amount"+str(idx) for idx, k in enumerate(resources_in_game.keys())])}</{PROPOSED_TRADE_TAG}>

4. The game ends immeditely after Player 2 makes their proposal.

5. There are no more future games.

6. You can reason step by step on why you are A) proposing, B) Accepting and C) Rejecting a trade with:
<{REASONING_TAG}> [add reasoning] </{REASONING_TAG}>. add as much text as you want
This information will not be sent to the other player. It is just for you to keep track of your reasoning.

```

Here is what you have access to:
```
Resources available in the game: {resources_in_game.keys()}
<{RESOURCES_TAG}> {initial_resources} </{RESOURCES_TAG}>
```

IF you are Player 1, all the responses you send should contain the following and in this order:

```
<{RESOURCES_TAG}> [add here] [not available to Player 2] </{RESOURCES_TAG}>
<{REASONING_TAG}> [add here] [not available to Player 2] </{REASONING_TAG}>
<{PLAYER_ANSWER_TAG}> [add here] </{PLAYER_ANSWER_TAG}>
<{PROPOSED_TRADE_TAG}> NONE </{PROPOSED_TRADE_TAG}>
```

If you are Player 2 all the responses you send should contain the following and in this order:

```
<{RESOURCES_TAG}> [add here] [not available to Player 1]  </{RESOURCES_TAG}
<{REASONING_TAG}> [add here] [not available to Player 1]  </{REASONING_TAG}>
<{PLAYER_ANSWER_TAG}> NONE </{PLAYER_ANSWER_TAG}>
<{PROPOSED_TRADE_TAG} [add here] </{PROPOSED_TRADE_TAG}>

Please be sure to include all.

{social_behaviour}
"""

    return prompt


""""<Player 1 RESOURCES> [add here] </Player 1 RESOURCES>
<ACCEPTED rule> [add here] </ACCEPTED rule>
<REJECTED rule> [add here] </REJECTED rule>"""

========================

Player 2 starts with {player_2_initial_resources}, Player 1 starts with no resources.

Player 1 must accept or reject the future proposed split before knowing Player 2's split. Player 1 cannot change their decision.

If Player 1 Rejects, Player 2 will lose everything and Player 1 gains {player_1_reject_resources}.

If Player 1 Accepts then anything Player 2 proposes is accepted. Player 1 should remember that when Player 1 makes a proposal, Player 2 decision is already fixed.

Player 2 has some resources and will decide on a split between Player 1 and Player 2 after knowing Player 2's decision. 

The game will follow this order exactly:
```

1. Player 1 makes a final decision and responds with either:

    A) Accept:
    <{PLAYER_ANSWER_TAG}> ACCEPTED </{PLAYER_ANSWER_TAG}>

    B) Reject:
    <{PLAYER_ANSWER_TAG}> REJECTED </{PLAYER_ANSWER_TAG}>
    
2. After Player 1 makes a decision, Player 2 will recieve it and propose a split of how much to give Player 2:

    <{PLAYER_ANSWER_TAG}> NONE </{PLAYER_ANSWER_TAG}>
    <{PROPOSED_TRADE_TAG}> Player 1 Gives {', '.join([k+" : 0" for k in resources_in_game.keys()])}, Player 2 Gives {', '.join([k+": amount"+str(idx) for idx, k in enumerate(resources_in_game.keys())])}</{PROPOSED_TRADE_TAG}>

3. The game ends immeditely after Player 2 makes their proposal. There are no more future games.
```

You can reason step by step on why you are A) proposing, B) Accepting and C) Rejecting a trade with:
<{REASONING_TAG}> [add reasoning] </{REASONING_TAG}>. add as much text as you want
This information will not be sent to the other player. It is just for you to keep track of your reasoning.


Here is what you have access to:
```
Resources available in the game: {resources_in_game.keys()}
<{RESOURCES_TAG}> {initial_resources} </{RESOURCES_TAG}>
```

IF you are Player 1, all the responses you send should contain the following and in this order:

```
<{RESOURCES_TAG}> [add here] [not available to Player 2] </{RESOURCES_TAG}>
<{REASONING_TAG}> [add here] [not available to Player 2] </{REASONING_TAG}>
<{PLAYER_ANSWER_TAG}> [add here] </{PLAYER_ANSWER_TAG}>
<{PROPOSED_TRADE_TAG}> NONE </{PROPOSED_TRADE_TAG}>
```

If you are Player 2 all the responses you send should contain the following and in this order:

```
<{RESOURCES_TAG}> [add here] [not available to Player 1]  </{RESOURCES_TAG}
<{REASONING_TAG}> [add here] [not available to Player 1]  </{REASONING_TAG}>
<{PLAYER_ANSWER_TAG}> NONE </{PLAYER_ANSWER_TAG}>
<{PROPOSED_TRADE_TAG} [add here] </{PROPOSED_TRADE_TAG}>

Please be sure to include all.

{social_behaviour}
"""

    return prompt


""""<Player 1 RESOURCES> [add here] </Player 1 RESOURCES>
<ACCEPTED rule> [add here] </ACCEPTED rule>
<REJECTED rule> [add here] </REJECTED rule>"""


===================

Player 2 starts with {player_2_initial_resources}, Player 1 starts with no resources.

Player 1 has two options:
    Option A: Player 1 gains {player_1_reject_resources} and Player 2 loses everything.

    Option B: Player 2 can choose how to split their resources with Player 1.


The game will follow this order exactly:
```

1. Player 1 makes a choice and responds with either:

    A) <{PLAYER_ANSWER_TAG}> OPTION_A </{PLAYER_ANSWER_TAG}>

    B) <{PLAYER_ANSWER_TAG}> OPTION_B </{PLAYER_ANSWER_TAG}>
    
2. If Player 1 chooses Option B Player 2 will propose a split that will be accepted:

    <{PLAYER_ANSWER_TAG}> NONE </{PLAYER_ANSWER_TAG}>
    <{PROPOSED_TRADE_TAG}> Player 1 Gives {', '.join([k+" : 0" for k in resources_in_game.keys()])}, Player 2 Gives {', '.join([k+": amount"+str(idx) for idx, k in enumerate(resources_in_game.keys())])}</{PROPOSED_TRADE_TAG}>

3. The game ends immeditely after Player 2 makes their proposal. There are no more future games.
```

You can reason step by step on why you are A) proposing, B) Accepting and C) Rejecting a trade with:
<{REASONING_TAG}> [add reasoning] </{REASONING_TAG}>. add as much text as you want
This information will not be sent to the other player. It is just for you to keep track of your reasoning.


Here is what you have access to:
```
Resources available in the game: {resources_in_game.keys()}
<{RESOURCES_TAG}> {initial_resources} </{RESOURCES_TAG}>
```

IF you are Player 1, all the responses you send should contain the following and in this order:

```
<{RESOURCES_TAG}> [add here] [not available to Player 2] </{RESOURCES_TAG}>
<{REASONING_TAG}> [add here] [not available to Player 2] </{REASONING_TAG}>
<{PLAYER_ANSWER_TAG}> [add here] </{PLAYER_ANSWER_TAG}>
<{PROPOSED_TRADE_TAG}> NONE </{PROPOSED_TRADE_TAG}>
```

If you are Player 2 all the responses you send should contain the following and in this order:

```
<{RESOURCES_TAG}> [add here] [not available to Player 1]  </{RESOURCES_TAG}
<{REASONING_TAG}> [add here] [not available to Player 1]  </{REASONING_TAG}>
<{PLAYER_ANSWER_TAG}> NONE </{PLAYER_ANSWER_TAG}>
<{PROPOSED_TRADE_TAG} [add here] </{PROPOSED_TRADE_TAG}>

Please be sure to include all.

{social_behaviour}
"""

    return prompt


""""<Player 1 RESOURCES> [add here] </Player 1 RESOURCES>
<ACCEPTED rule> [add here] </ACCEPTED rule>
<REJECTED rule> [add here] </REJECTED rule>"""